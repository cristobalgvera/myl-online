name: Deploy website

on: [push]

env:
  BRANCH_NAME: ${{ github.ref_name }}
  PROD_BRANCH_NAME: 'main'

permissions:
  pull-requests: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Repository Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile --strict-peer-dependencies

      - name: Check code quality
        run: pnpm lint && pnpm lint:types && pnpm build

      - name: Deploy to Netlify
        id: netlify_deploy
        run: |
          prod_flag=$([ "$BRANCH_NAME" == "$PROD_BRANCH_NAME" ] && echo "--prod" || echo "")

          pnpm netlify deploy \
            $prod_flag \
            --site ${{ secrets.NETLIFY_SITE_ID }} \
            --auth ${{ secrets.NETLIFY_API_TOKEN }} \
            --json \
            > deploy_output.json

      - name: Generate URL Preview
        id: url_preview
        if: ${{ env.BRANCH_NAME != env.PROD_BRANCH_NAME }}
        run: |
          NETLIFY_PREVIEW_URL=$(jq -r '.deploy_url' deploy_output.json)
          echo "NETLIFY_PREVIEW_URL=$NETLIFY_PREVIEW_URL" >> "$GITHUB_OUTPUT"

      - name: Comment URL Preview on PR
        uses: actions/github-script@v7
        if: ${{ env.BRANCH_NAME != env.PROD_BRANCH_NAME }}
        env:
          NETLIFY_PREVIEW_URL: ${{ steps.url_preview.outputs.NETLIFY_PREVIEW_URL }}
        with:
          script: |
            async function comment() {
              const { data } = await github.rest.repos.listPullRequestsAssociatedWithCommit({
                owner: context.repo.owner,
                repo: context.repo.repo,
                commit_sha: context.sha,
              });

              const issueNumber = data.at(0)?.number;

              if(issueNumber) {
                await github.rest.issues.createComment({
                  issue_number: issueNumber,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: `Preview URL: ${process.env.NETLIFY_PREVIEW_URL}`
                });
              } else {
                console.log(`No PR found for commit ${context.sha}`);
              }
            }

            comment();
